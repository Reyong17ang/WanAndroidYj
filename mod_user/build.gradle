plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    namespace 'com.example.mod_user'
    compileSdk 33

    defaultConfig {
        minSdk 26

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_19
        targetCompatibility JavaVersion.VERSION_19
    }
    kotlinOptions {
        jvmTarget = '19'
    }
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation rootProject.depsLibs.coreKtx
    implementation rootProject.depsLibs.appcompat
    implementation rootProject.depsLibs.material
    implementation rootProject.depsLibs.constraintlayout
    implementation rootProject.depsLibs.liveDataKtx
    implementation rootProject.depsLibs.viewModelKtx
//    implementation rootProject.depsLibs.navigationFragment
//    implementation rootProject.depsLibs.navigationUI

    implementation rootProject.depsLibs.junit
    implementation rootProject.depsLibs.extJunit
    implementation rootProject.depsLibs.espressoCore

//    implementation rootProject.depsLibs.gson
//    implementation rootProject.depsLibs.flexbox
    implementation rootProject.depsLibs.mmkv

    implementation rootProject.depsLibs.refreshLayout
    implementation rootProject.depsLibs.refreshHeader
    implementation rootProject.depsLibs.refreshFooter

    implementation rootProject.depsLibs.aroutreApi
    kapt rootProject.depsLibs.arouterCompiler

//    implementation rootProject.depsLibs.cameraX
    implementation rootProject.depsLibs.rxPermission
    implementation rootProject.depsLibs.rxjava
    implementation rootProject.depsLibs.rxandroid

    implementation project(path: ':lib_framework')
    implementation project(path: ':lib_common')
    implementation project(path: ':lib_network')
    implementation project(path: ':lib_glide')
}